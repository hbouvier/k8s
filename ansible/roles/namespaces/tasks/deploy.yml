---

- name: set namespace to {{ item }}
  set_fact:
    namespace: "{{ item }}"

- debug: var=namespace
- debug: var=kubernetes.root.path

- name: "mkdir {{ kubernetes.root.path }}/{{ namespace }}"
  file:
    path: "{{ kubernetes.root.path }}/{{ namespace }}"
    state: directory

- name: render admin-role.yaml for namespace {{ namespace }}
  template:
    src: "templates/admin-role.yaml.j2"
    dest: "{{ kubernetes.root.path }}/{{ namespace }}/admin-role.yaml"

- name: render developer-role.yaml for namespace {{ namespace }}
  template:
    src: "templates/developer-role.yaml.j2"
    dest: "{{ kubernetes.root.path }}/{{ namespace }}/developer-role.yaml"

- name: create namespace {{namespace}}
  kubernetes:
    state:     present
    name:      "{{ namespace }}"
    resource:  namespace

- name: create admin role for namespace {{namespace}}
  kubernetes:
    state:     "{{ deploy_state }}"
    name:      "{{ rbac_namespace }}:admin"
    resource:  role
    namespace: "{{ namespace }}"
    manifest:  "{{ kubernetes.root.path }}/{{ namespace }}/admin-role.yaml"

- name: create developer role for namespace {{namespace}}
  kubernetes:
    state:     "{{ deploy_state }}"
    name:      "{{ rbac_namespace }}:developer"
    resource:  role
    namespace: "{{ namespace }}"
    manifest:  "{{ kubernetes.root.path }}/{{ namespace }}/developer-role.yaml"

- name: google service account
  kubernetes:
    state:     "{{ deploy_state }}"
    name:      google-service-account
    resource:  configmap
    namespace: "{{ namespace }}"
    manifest:  "gs://{{ bucket }}/oauth2-proxy/google-service-account.yaml"

- name: google oauth client
  kubernetes:
    state:     "{{ deploy_state }}"
    name:      google-oauth-client
    resource:  secret
    namespace: "{{ namespace }}"
    manifest:  "gs://{{ bucket }}/oauth2-proxy/google-oauth-client.yaml"

- name: delete dockerhub credentials for namespace {{ namespace }}
  kubernetes:
    state:     absent
    name:      docker-hub-private-registry
    resource:  secret
    namespace: "{{ namespace }}"
  when: 'deploy_state == "apply"'

- name: create dockerhub credentials for namespace {{ namespace }}
  kubernetes:
    state:     "{{ deploy_state }}"
    name:      docker-hub-private-registry
    resource:  secret
    namespace: "{{ namespace }}"
    manifest:  "gs://{{ bucket }}/hub.docker.com/docker-hub-private-registry.yaml"

